{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./account.service\";\nexport let UiService = /*#__PURE__*/(() => {\n  class UiService {\n    constructor(accountService) {\n      this.accountService = accountService;\n      this.showMenu = false;\n      this.loggedIn = false;\n      this.username = '';\n      this.menuSubject = new Subject();\n      this.loggedInSubject = new Subject();\n      this.usernameSubject = new Subject();\n      this.accountService.getCurrentUser().subscribe(user => {\n        this.setLoggedIn(true);\n        this.setUsername(user.username);\n      }, error => {\n        this.setLoggedIn(false);\n        this.setUsername('');\n      });\n    } // Menu\n\n\n    showNavMenu() {\n      this.showMenu = !this.showMenu;\n      this.menuSubject.next(this.showMenu);\n    } // Menu\n\n\n    hideNavMenu() {\n      this.showMenu = false;\n      this.menuSubject.next(this.showMenu);\n    }\n\n    onToggleMenu() {\n      return this.menuSubject.asObservable();\n    } // Logged In\n\n\n    onLoggedInChanged() {\n      return this.loggedInSubject.asObservable();\n    }\n\n    setLoggedIn(loggedIn) {\n      this.loggedIn = loggedIn;\n      this.loggedInSubject.next(this.loggedIn);\n    } // Username\n\n\n    setUsername(username) {\n      this.username = username;\n      this.usernameSubject.next(this.username);\n    }\n\n    onUsernameChanged() {\n      return this.usernameSubject.asObservable();\n    }\n\n  }\n\n  UiService.ɵfac = function UiService_Factory(t) {\n    return new (t || UiService)(i0.ɵɵinject(i1.AccountService));\n  };\n\n  UiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UiService,\n    factory: UiService.ɵfac,\n    providedIn: 'root'\n  });\n  return UiService;\n})();","map":null,"metadata":{},"sourceType":"module"}